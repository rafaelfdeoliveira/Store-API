version: "3"
services:
  product-api:
    image: hnvpmpd6lan4n47/product-api
    ports:
      - "8082:8381"
    networks:
      - store-api
    depends_on:
      - mongoDB
    environment:
      - spring.data.mongodb.host=mongoDb
      - spring.data.mongodb.port=27017

  purchase-api:
    image: hnvpmpd6lan4n47/purchase-api
    ports:
      - "8081:8080"
    networks:
      - store-api
    depends_on:
      - postgresDB
    environment:
      - spring.datasource.url=jdbc:postgresql://postgresDB/store
  
  user-api:
    image: hnvpmpd6lan4n47/user-api
    ports:
      - "8080:8080"
    networks:
      - store-api
    depends_on:
      - postgresDB
    environment:
      - spring.datasource.url=jdbc:postgresql://postgresDB/store

  mongoDB:
    image: mongo
    restart: always
    networks:
      - store-api
    volumes:
      - database:/mongo

  postgresDB:
    image:  postgres
    restart: always
    networks:
      - store-api
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=store
    volumes:
      - database:/postgres

  prometheus:
    image: prom/prometheus:v2.35.0
    depends_on:
      - product-api
    networks:
      - store-api
    ports:
      - "9090:9090"
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - store-api

networks:
  store-api:

volumes:
  prometheus-data:
  database: